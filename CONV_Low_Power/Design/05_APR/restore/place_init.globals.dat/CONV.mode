if {![namespace exists ::IMEX]} { namespace eval ::IMEX {} }
set ::IMEX::dataVar [file dirname [file normalize [info script]]]
set ::IMEX::libVar ${::IMEX::dataVar}/libs

catch { setDesignMode -process 180 }
catch { setAnalysisMode -analysisType bcwc }
catch { setAnalysisMode -checkType setup }
catch { setAnalysisMode -clkSrcPath true }
catch { setAnalysisMode -clockPropagation forcedIdeal }
catch { setAnalysisMode -usefulSkew true }
catch { setOptMode -activeHoldViews { AV_func_min AV_scan_min } }
catch { setOptMode -activeSetupViews { AV_func_max AV_scan_max } }
catch { setOptMode -autoSetupViews {AV_scan_max AV_func_max} }
catch { setOptMode -autoTDGRSetupViews { AV_scan_max} }
catch { setOptMode -drcMargin 0 }
catch { setOptMode -fixDrc true }
catch { setOptMode -optimizeFF true }
catch { setOptMode -placementSetupViews { AV_func_max  } }
catch { setOptMode -setupTargetSlack 0 }
catch { setPathGroupOptions reg2reg -effortLevel high -weight 2 }
catch { setPathGroupOptions reg2out -effortLevel low }
catch { setPathGroupOptions reg2cgate -effortLevel high -weight 1 }
catch { setPathGroupOptions in2reg -effortLevel low }
catch { setPathGroupOptions in2out -effortLevel low }
catch { setExtractRCMode  -engine preRoute -total_c_th 5 -relative_c_th 0.03 -coupling_c_th 3 }
catch {setNanoRouteMode -quiet -droutePostRouteSpreadWire "1"}
catch {setNanoRouteMode -quiet -extractThirdPartyCompatible false}
catch {setNanoRouteMode -quiet -grouteExpTdStdDelay 58.400000}
catch {setNanoRouteMode -quiet -timingEngine ""}

catch { setPlaceMode -maxRouteLayer 6 }
catch { setPlaceMode -place_detail_check_route false }
catch { setPlaceMode -place_detail_preserve_routing true }
catch { setPlaceMode -place_detail_remove_affected_routing false }
catch { setPlaceMode -place_detail_swap_eeq_cells false }
catch { setPlaceMode -place_global_clock_gate_aware true }
catch { setPlaceMode -place_global_cong_effort auto }
catch { setPlaceMode -place_global_ignore_scan true }
catch { setPlaceMode -place_global_ignore_spare true }
catch { setPlaceMode -place_global_module_aware_spare false }
catch { setPlaceMode -place_global_place_io_pins true }
catch { setPlaceMode -place_global_reorder_scan false }
catch { setPlaceMode -powerDriven false }
catch { setPlaceMode -timingDriven true }
catch { setIlmMode -keepHighFanoutPorts true -keepLoopBack false -keepFlatten true }
catch { setUsefulSkewMode -maxAllowedDelay 1 }
catch { setUsefulSkewMode -maxSkew false }
catch { setUsefulSkewMode -noBoundary false }
catch { setUsefulSkewMode -useCells {BUFFD10 BUFFD12 BUFFD1 BUFFD2 BUFFD3 BUFFD4 BUFFD6 BUFFD8 DEL1 DEL2 DEL3 DEL4 INVD10 INVD12 INVD1 INVD2 INVD3 INVD4 INVD6 INVD8} }
catch { setSrouteMode -viaConnectToShape {ring stripe} }
catch { set_verify_drc_mode -area {0 0 0 0} }
catch { set_verify_drc_mode -check_ndr_spacing auto }
catch { set_verify_drc_mode -check_only default }
catch { set_verify_drc_mode -check_same_via_cell false }
catch { set_verify_drc_mode -disable_rules "" }
catch { set_verify_drc_mode -exclude_pg_net false }
catch { set_verify_drc_mode -ignore_cell_blockage false }
catch { set_verify_drc_mode -ignore_trial_route false }
catch { set_verify_drc_mode -limit 1000 }
catch { set_verify_drc_mode -report ${::IMEX::libVar}/misc/CONV.drc.rpt }
catch { set_verify_drc_mode -use_min_spacing_on_block_obs auto }
catch { setDelayCalMode -enable_high_fanout true }
catch { setDelayCalMode -eng_copyNetPropToNewNet true }
catch { setDelayCalMode -engine aae }
catch { setDelayCalMode -ignoreNetLoad false }
catch { setAddRingMode -avoid_short false }
catch { setAddRingMode -extend_over_row false }
catch { setAddRingMode -ignore_rows false }
catch { setAddRingMode -orthogonal_only true }
catch { setAddRingMode -ring_target default }
catch { setAddRingMode -skip_crossing_trunks none }
catch { setAddRingMode -skip_via_on_pin standardcell }
catch { setAddRingMode -skip_via_on_wire_shape noshape }
catch { setAddRingMode -stacked_via_bottom_layer ME1 }
catch { setAddRingMode -stacked_via_top_layer ME6 }
catch { setAddRingMode -via_using_exact_crossover_size true }
catch { setImportMode -config true }
catch { setImportMode -discardFloatingVNets false }
catch { setImportMode -keepEmptyModule true }
catch { setSIMode -separate_delta_delay_on_data true }
catch { setAddStripeMode -allow_jog none }
catch { setAddStripeMode -break_at none }
catch { setAddStripeMode -extend_to_closest_target none }
catch { setAddStripeMode -ignore_block_check false }
catch { setAddStripeMode -ignore_nondefault_domains false }
catch { setAddStripeMode -orthogonal_only true }
catch { setAddStripeMode -partial_set_thru_domain false }
catch { setAddStripeMode -route_over_rows_only false }
catch { setAddStripeMode -rows_without_stripes_only false }
catch { setAddStripeMode -skip_via_on_pin standardcell }
catch { setAddStripeMode -skip_via_on_wire_shape noshape }
catch { setAddStripeMode -spacing_from_block 0 }
catch { setAddStripeMode -spacing_type edge_to_edge }
catch { setAddStripeMode -split_vias false }
catch { setAddStripeMode -stacked_via_bottom_layer ME5 }
catch { setAddStripeMode -stacked_via_top_layer ME6 }
catch { setAddStripeMode -stop_at_last_wire_for_area false }
catch { setAddStripeMode -stripe_min_length stripe_width }
catch { setAddStripeMode -trim_antenna_back_to_shape none }
catch { setAddStripeMode -via_using_exact_crossover_size false }
catch { setRouteMode -earlyGlobalHonorMsvRouteConstraint false }
catch { setRouteMode -earlyGlobalRoutePartitionPinGuide true }
catch { setEndCapMode -boundary_tap false }
catch { setFPlanMode -defaultTechSite Core8T }
catch { setFPlanMode -maxIoHeight false }
catch { setFPlanMode -powerRailLayer {} }
